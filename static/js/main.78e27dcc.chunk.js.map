{"version":3,"sources":["components/Container/Container.styled.js","components/Container/Container.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/FormikContactForm/FormikContactForm.styled.js","components/FormikContactForm/FormikContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","App.js","reportWebVitals.js","index.js"],"names":["ContainerWrap","Container","children","Wrapper","styled","div","Title","h2","Section","title","CustomForm","Form","Label","Input","Field","Button","ErrorMsg","validationSchema","Yup","name","required","number","phone","FormikContactForm","onSubmit","initialValues","values","setSubmitting","resetForm","id","uuidv4","touched","autoComplete","htmlFor","size","type","placeholder","component","List","ul","ListItem","li","button","ContactList","contacts","onDeleteContact","map","contact","onClick","FilterInput","Filter","value","onChange","App","state","filter","addContact","newContact","find","toast","error","duration","position","setState","success","changeFilter","e","currentTarget","onInputSearch","searchName","toLowerCase","includes","deleteContact","contactId","prevState","localStorage","getItem","setedContacts","JSON","parse","this","setItem","stringify","visibleContacts","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78e27dcc.chunk.js","sourcesContent":["import styled from \"@emotion/styled/macro\";\n\nexport const ContainerWrap = styled.div`\n  width: 100%;\n  height: 100vh;\n  padding: 0 15px;\n\n  margin: 0 auto;\n\n  /* background-color: #bcbabe; */\n`;\n","import {ContainerWrap} from './Container.styled'\n\nfunction Container({ children }) {\n  return <ContainerWrap>{children}</ContainerWrap>;\n}\n\nexport default Container;","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n\n  width: 500px;\n  display: block;\n  padding: 20px 30px;\n  margin: 0 auto;\n  margin-top: 40px;\n\n  text-align: center;\n\n  background-color: var(--bg-section);\n  color: var(--text-color-main);\n  border-radius: 4px;\n  box-shadow: 4px 4px 8px 0px rgba(154, 158, 171, 0.2);\n\n  &:not(:last-child) {\n    margin-bottom: 30px;\n  }\n`;\n\nexport const Title = styled.h2`\n  display: inline-block;\n  align-items: baseline;\n  margin: 0;\n  margin-bottom: 20px;\n  margin-right: 10px;\n  font-size: 32px;\n  font-weight: 700;\n\n  text-align: center;\n\n\n`;\n","import PropTypes from 'prop-types';\n\nimport {Wrapper, Title} from './Section.styled.js';\n\nfunction Section({ title, children }) {\n  return (\n    <Wrapper>\n      <Title>{title}</Title> {children}\n    </Wrapper>\n  );\n}\n\n\n\nSection.propTypes={\n  title: PropTypes.string,\n}\n\nexport default Section;\n","import styled from \"@emotion/styled/macro\";\nimport { Form, Field } from \"formik\";\n\nexport const CustomForm = styled(Form)`\ndisplay: flex;\nflex-wrap: wrap;\n`;\n\nexport const Label = styled.label`\n  display: inline-block;\n  align-items: baseline;\n  text-align: start;\n  font-size: 20px;\n  margin-bottom: 20px;\n\n  & > svg {\n    margin-right: 10px;\n  }\n`;\n\nexport const Input = styled(Field)`\n  display: block;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  width: 400px;\n  height: 35px;\n\n  border: none;\n  border-radius: 4px;\n  padding-left: 15px;\n  color: #444c5c;\n\n  /* background-color: #9a9eab; */\n\n  &:placeholder-shown {\n    font-size: 14px;\n  }\n\n  &:hover,\n  &:focus {\n    outline: none;\n    border: 1px solid #444c5c;\n    box-shadow: 3px 4px 5px 0px rgb(120 165 163 / 20%);\n  }\n`;\n\nexport const Button = styled.button`\n  display: block;\n  background-color: white;\n  border: none;\n  border-radius: 4px;\n  outline: none;\n  padding: 8px 16px;\n  color: #ec96a4;\n  font-weight: bold;\n  font-size: 14px;\n  line-height: 24px;\n  text-transform: uppercase;\n\n  cursor: pointer;\n\n  margin: 0 auto;\n  margin-top: 15px;\n  transition: all 300ms linear;\n\n  &:hover,\n  &:focus {\n    color: #f1f1f2;\n    background-color: #444c5c;\n    transform: scale(1.03);\n  }\n`;\n\nexport const ErrorMsg = styled.div`\n  font-size: 14px;\n  color: var(--notification-color);\n  margin-bottom: 10px;\n`;\n","import React from \"react\";\nimport { Formik, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"yup-phone\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n\nimport { FaUserAlt, FaPhoneAlt } from \"react-icons/fa\";\n\nimport {\n  CustomForm,\n  Label,\n  Input,\n  ErrorMsg,\n  Button,\n} from \"./FormikContactForm.styled\";\n\n\n\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required(\"Please enter contact name\"),\n  number: Yup.string()\n    .phone(\"UA\", true, \"Please enter a valid phone number\")\n    .required(),\n});\n\nconst FormikContactForm = ({ onSubmit }) => (\n  <div>\n    <Formik\n      initialValues={{ name: \"\", number: \"\" }}\n      validationSchema={validationSchema}\n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        const { name, number } = values;\n        onSubmit({ id: uuidv4(), name, number });\n        resetForm();\n        setSubmitting(false);\n      }}\n    >\n      {({ touched }) => (\n        <CustomForm autoComplete=\"off\">\n          <Label htmlFor=\"firstName\">\n            <FaUserAlt size=\"16\" />\n            Name\n            <Input type=\"text\" name=\"name\" placeholder=\"Name\" />\n            <ErrorMessage name=\"name\" component={ErrorMsg} />\n          </Label>\n          <Label htmlFor=\"firstName\">\n            <FaPhoneAlt size=\"16\" />\n            Number\n            <Input type=\"text\" name=\"number\" placeholder=\"38(***) *** ****\" />\n            {touched.number && (\n              <ErrorMessage name=\"number\" component={ErrorMsg}></ErrorMessage>\n            )}\n          </Label>\n\n          <Button type=\"submit\">Add Contact</Button>\n        </CustomForm>\n      )}\n    </Formik>\n  </div>\n);\n\nexport default FormikContactForm;\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  padding: 0;\n  list-style: none;\n  margin:0;\n  margin-top: 35px;\n\n  font-size: 17px;\n`;\n\nexport const ListItem = styled.li`\n\n  border: 1px solid white;\n  border-radius: 5px;\n  padding: 8px;\n  display: flex;\n  align-items: center;\n  \n\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n  &>svg{\n    margin-right: 10px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  align-items: center;\n\n  background-color: white;\n  border: none;\n  border-radius: 4px;\n  outline: none;\n  padding: 4px 8px;\n  color: var(--text-color-accent);\n  \n  font-size: 17px;\n  line-height: 20px;\n  text-transform: capitalize;\n\n  cursor: pointer;\n\n  transition: all 300ms linear;\n  margin-left: auto;\n\n  &:hover,\n  &:focus {\n    color: #f1f1f2;\n    background-color: #444c5c;\n    transform: scale(1.03);\n  }\n  & > svg {\n    margin-left: 8px;\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport {BsTrashFill} from 'react-icons/bs'\nimport {RiContactsFill} from 'react-icons/ri'\n\nimport { List, ListItem, Button } from \"./ContactList.styled\";\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <List>\n      {contacts.map((contact) => {\n        return (\n          <ListItem key={contact.id}>\n            <RiContactsFill size='17'/>\n            {contact.name}:  {contact.number}\n            <Button type=\"button\" onClick={() => onDeleteContact(contact.id)}>\n              Delete\n              <BsTrashFill></BsTrashFill>\n            </Button>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)),\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import styled from \"@emotion/styled/macro\";\n\nexport const FilterInput = styled.input`\n\n  &:hover,\n  &:focus {\n    outline: none;\n    border: 1px solid #444c5c;\n    box-shadow: 3px 4px 5px 0px rgb(120 165 163 / 20%);\n  }\n`;\n\nexport const Label = styled.label`\n  text-align: start;\n  display: inline-block;\n  align-items: baseline;\n\n  font-size: 20px;\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n  & input {\n    margin-top: 5px;\n    width: 400px;\n    height: 35px;\n\n    border: none;\n    border-radius: 4px;\n  }\n  & > svg {\n    margin-right: 10px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {FaSearch} from 'react-icons/fa'\nimport { FilterInput, Label } from \"./Filter.styled\";\n\n\n\nfunction Filter({ value, onChange }) {\n  return (\n    <div>\n      <Label><FaSearch size='14'></FaSearch>Find contacts by name\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        title=\"Введите запрос для поиска\"\n        required\n        onChange={onChange}\n        value={value}\n      /></Label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n}\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { HiUsers } from \"react-icons/hi\";\nimport { FaAddressBook } from \"react-icons/fa\";\n\nimport Container from \"./components/Container/Container\";\nimport Section from \"./components/Section/Section\";\n//import ContactForm from \"./components/ContactForm/ContactForm\";\nimport FormikContactForm from \"../src/components/FormikContactForm/FormikContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n\n// [\n//   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n// ]\n\n// const notify = () => toast('Here is your toast.');\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    // 2. (Вызывается 1 раз после монтирования) Записываем в стейт данные из localStorage\n    const contacts = localStorage.getItem(\"contacts\");\n    const setedContacts = JSON.parse(contacts);\n\n    // записываем данные в стейт только, если в localStorage что то есть\n    if (setedContacts) {\n      this.setState({ contacts: setedContacts });\n    }\n  }\n  componentDidUpdate(prevState) {\n    // 1. (Вызывается каждый раз, когда происх ихмененияе в компоненте) Проверяем обновился ли стейт и если ДА, то записываем данные в localStorage\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = (newContact) => {\n    const findName = this.state.contacts.find((contact) => contact.name === newContact.name);\n    \n    if (!findName){\n      this.setState(({ contacts }) => ({\n        contacts: [newContact, ...contacts],\n      }))\n       toast.success(`Contact ${newContact.name} added to Phonebook`, {\n        duration: 4000,\n        position: 'top-right'}); \n    } else {toast.error(`${newContact.name} is already in contacts.`, {\n      duration: 4000,\n      position: 'top-right'})}\n    \n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  onInputSearch = () => {\n    const { filter, contacts } = this.state;\n    const searchName = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(searchName)\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => {\n        return contact.id !== contactId;\n      }),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.onInputSearch();\n    return (\n      <Container>\n        <Toaster />\n        <Section title={\"Phonebook\"}>\n          <FaAddressBook size=\"24\" />\n          <FormikContactForm onSubmit={this.addContact} />\n        </Section>\n        {/* <ContactForm onSubmit={this.addContact}></ContactForm> */}\n        <Section title={\"Contacts\"}>\n          <HiUsers size=\"26\" />\n          <Filter onChange={this.changeFilter} value={filter} />\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          ></ContactList>\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}